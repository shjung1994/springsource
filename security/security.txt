spring security
- 현재 프로젝트는 시큐리티 설정에 의해 움직임

filter를 통과해야 컨트롤러로 넘어감

  로그인 정보 없이는 모든 페이지 접근불가
  익명사용자(AnonymousUser)
  인증사용자(authentication User) - 로그인 후
  username: 페이지에서 사용하는 아이디임

- 비밀번호 암호화
  단방향 암호화: 한 번 암호화를 하면 원 비밀번호는 모름

- 메소드
  permitAll(): 권한 필요 없음
  authenticated(): (로그인 성공 후 부여되는)권한 필요 함

- 로그인 페이지
  id에 해당하는 요소의 이름은 반드시 username(변경 가능)
  사용자의 로그인 페이지를 사용하려면 .formLogin(login -> login.loginPage("/member/login").permitAll());
  로그인 POST 작업은 하지 않음 => 시큐리티가 처리 (get을 제외한 모든 방법(post,put,delete)은 csrf토큰을 요구함)
  => thymeleaf에서는 action에 경로설정을 하면(<form th:action="@{/member/login}">), csrf토큰을 넣어줌
  로그인 성공 후 어디로 이동할 것인지 경로 지정을 하지 않으면 이전 url로 되돌아감

  로그인 처리를 위한 Service는 작성해야 함: UserDetailsService 구현

소셜계정 처리
=> 테이블 저장
   email, pw

- 403 에러:
csrf값 자동으로 들어갔는지 확인(원래 자동으로 들어감): form action 값 적었는지 확인
                                                       axios, fetch => headers에 값 추가했는지 확인!

- thymeleaf security 표현하기
  - th:value="${#authentication.principle.name}"

  - sec:authorize="isAuthenticated()"
  - sec:authorize="hasRole('ROLE_ADMIN')"
  - sec:authorize="hasAnyRole('ROLE_USER','ROLE_ADMIN')"

  - sec:authentication="name": id 가져오기
  - sec:authentication="principle.authorities": 권한 가져오기

  - sec:authorize="hasAnyRole({'ROLE_USER','ROLE_ADMIN','ROLE_MANAGER'})"
    hasAnyRole(): Role 여러 개 중에 하나만 만족한다면
    hasRole(): Role 하나만 작성하고 그 Role 만족한다면
  
  - 작성한 경로를 제외하고는 모두 로그인 필요함
  http
    .authorizeHttpRequests(authorize -> authorize.requestMatchers("/css/**","/js/**","/img/**","/assets/**").permitAll()
    .requestMatchers("/board/read").permitAll()
    .anyRequest().authenticated())
  - .anyRequest().permitAll(): 컨트롤러 메소드 단에서 제어